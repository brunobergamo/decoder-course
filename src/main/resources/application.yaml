#server:
#  port: 0
#  servlet:
#    context-path: '/ead-course/'
#
#
spring:
  application:
    name: ead-course-service
  config:
    import: 'configserver:'
  cloud:
    config:
      discovery:
        serviceId: ead-config-server
#  datasource:
#    url: jdbc:postgresql://localhost:5434/courseDb
#    username: admin
#    password: admin
#  jpa:
#    hibernate:
#      ddl-auto: update
#      dialect: org.hibernate.dialect.PostgreSQLDialect
#      jdbc:
#        lob.non-contextual-creation: true
#    properties:
#      hibernate:
#        show_sql: true
#  output:
#    ansi:
#      enabled: Always
#  rabbitmq:
#    host: localhost
#    port: 5672
#    password: guest
#    username: guest
#
#
#logging:
#  level:
#    com.ead: TRACE
#    root: INFO
#    org.springframework.web: DEBUG
#    org.hibernate: INFO
#
#ead:
#  api:
#    url:
#      authUser: 'http://ead-authuser-service/ead-authuser'
#  broker:
#    exchange:
#      userEventExchange: ead.userevent
#    queue:
#      userEventQueue:
#        name: ead.userevent.ms.course
#
#eureka:
#  client:
#    service-url:
#      defaultZone:  ${EUREKA_URL:http://localhost:8761/eureka}
#  instance:
#    hostname: localhost
#    instanceId : ${spring.application.name}:${random.value}
#    metadata-map:
#      #Integrated into Prometheus, the following data will be added to the tags before the Prometheus re tag, for example, sys. Module will become
#      "prometheus.scrape": "true"
#      "prometheus.path": "/ead-course/actuator/prometheus"
#      "sys.module": "order"
#    statusPageUrlPath: ${server.servlet.context-path}actuator/info
#    healthCheckUrlPath: ${server.servlet.context-path}actuator/health
#
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: '*'
#  metrics:
#    export:
#      prometheus:
#        enabled: true
#  endpoint:
#    metrics:
#      enabled: false
#    prometheus:
#      enabled: true